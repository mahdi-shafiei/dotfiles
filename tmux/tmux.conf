# cat <<__DATA__ >/dev/null
# Embed shell scripts

# Includes code from DrMilk (https://unix.stackexchange.com/questions/122508/set-tmux-status-line-color-based-on-hostname)

# source https://github.com/tony/tmux-config/blob/master/.tmux.conf
set-option -g prefix C-a
bind-key C-a last-window

bind J resize-pane -D 1
bind K resize-pane -U 1
bind L resize-pane -R 1
bind H resize-pane -L 1


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#     bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#     bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#     bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#     bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#     bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#     bind-key -T copy-mode-vi C-h select-pane -L
#     bind-key -T copy-mode-vi C-j select-pane -D
#     bind-key -T copy-mode-vi C-k select-pane -U
#     bind-key -T copy-mode-vi C-l select-pane -R
#     bind-key -T copy-mode-vi C-\ select-pane -l

bind-key -n C-\ select-pane -l
bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R

#vim buffer navigation
set-window-option -g mode-keys vi

# open pane/window with current path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# change tmux copy-paste
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle \; send-keys -X begin-selection

# vim line copy not working yet
# bind -t vi-copy Y send 0; send v; send $; #copy-pipe 'xclip -in -selection clipboard'

# enter tmux copy-mode + action
bind Escape copy-mode
bind [ copy-mode
bind C-u copy-mode \; send C-u
bind C-b copy-mode \; send C-b
bind k copy-mode \; send k
bind / copy-mode\; send /

# set key for reloading config
bind r source-file ~/.tmux.conf \; display-message 'Config reloaded'

# Increase tmux history size
set-option -g history-limit 100000

# Remove Esc delay
set -g escape-time 0

# Custom split 
# https://lukaszwrobel.pl/blog/tmux-tutorial-split-terminal-windows-easily/
bind v source-file ~/git/dotfiles/tmux/split1

# Tmux swap window with left/right one
# https://superuser.com/questions/343572/how-do-i-reorder-tmux-windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Send prefix
bind-key b send-prefix

# Clear screen
bind C-l send-keys -R \; send-keys Enter
bind-key -n M-c send-keys C-l


# Let tmux-resurrect restore all programs
set -g @resurrect-processes ':all:'


# TPM (Tmux Plugin Manager)
# https://github.com/tmux-plugins/tpm

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'


# Source file for custom settings
#source-file ~/git/dotfiles/tmux/custom


run "cut -c3- ~/.tmux.conf | bash -s apply_configuration"

# set shell
set -g default-shell /bin/zsh
#set -g default-shell /bin/bash


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

## border colours (not working)
set -g pane-border-style fg=default


# __DATA__
#
# apply_configuration() {
#   if [ $(hostname) = "tom-ThinkPad-L460" ]
#   then
#       tmux set -g @themepack 'powerline/default/green'
#   elif  [ $(hostname) = "tom-desktop" ]
#   then
#       tmux set -g @themepack 'powerline/block/orange'
#   elif  [ $(hostname) = "tom-Desktop-18" ]
#   then
#       tmux set -g @themepack 'powerline/block/red'
#   elif  [ $(hostname) = "tom-ThinkPad-L460-18" ]
#   then
#       tmux set -g @themepack 'powerline/block/green'
#   else
#       tmux set -g status-bg colour$(hash_string256 $(hostname))
#   fi
# }
# hash_string256() {
#      hash_value=$(printf "%s" "$1" | md5sum | sed -e 's/[^[:alnum:]]\+//g' | tr "a-f" "A-F")
#      if [ "x" != "x$2" ]
#      then
#          v2="+ $2"
#      fi
#      echo "$(((0x$hash_value $v2) % 255))" | tr -d "-"
# }
# 
# $1
